/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Contact = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  locationCardTitle?: string;
  contactCardTitle?: string;
  teachers?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "teacher";
  }>;
  seo?: SeoMetaFields;
};

export type Calendar = {
  _id: string;
  _type: "calendar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  classes?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "masterClass";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "courseModule";
      };
  parentMasterClass?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentCourseModule?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentMasterClasses?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "calendar";
  }>;
  parentCourseModules?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "calendar";
  }>;
  active?: boolean;
  startDate?: string;
  endDate?: string;
  summaryEventDate?: string;
};

export type TextBlock = {
  _type: "textBlock";
  content?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
};

export type MenuItem = {
  _type: "menuItem";
  name?: string;
  type?: "dropdown" | "reference";
  reference?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "masterClass";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "courseModule";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "genericPage";
      };
  dropdownType?: "MASTERCLASS" | "COURSE_MODULE";
};

export type Settings = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  address?: string;
  mainContactEmail?: string;
  mainContactPhone?: string;
  companyCode?: string;
  bankIban?: string;
  registerInterestShortCourse?: string;
  registerInterestCourseModule?: string;
  registerInterestMasterClass?: string;
  menu?: Array<
    {
      _key: string;
    } & MenuItem
  >;
  footerContent?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  seo?: SeoMetaFields;
};

export type GenericPage = {
  _id: string;
  _type: "genericPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  blocks?: Array<
    | ({
        _key: string;
      } & TextBlock)
    | ({
        _key: string;
      } & ShortCourseTable)
  >;
  seo?: SeoMetaFields;
};

export type CourseModule = {
  _id: string;
  _type: "courseModule";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  documentNotReady?: boolean;
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  notSeparatelyTakeable?: boolean;
  expectedParticipants?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  registrationAndPaymentInfo?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  organizationalInformation?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  slug?: Slug;
  color?: Color;
  minParticipants?: number;
  maxParticipants?: number;
  courseSize?: number;
  price?: number;
  city?: string;
  address?: string;
  courses?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "shortCourse";
  }>;
  contactPerson?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "teacher";
  };
  registrationLink?: string;
  seo?: SeoMetaFields;
};

export type ShortCourseTable = {
  _type: "shortCourseTable";
  title?: string;
};

export type ShortCourse = {
  _id: string;
  _type: "shortCourse";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  documentNotReady?: boolean;
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  expectedParticipants?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  registrationAndPaymentInfo?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  organizationalInformation?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  slug?: Slug;
  minParticipants?: string;
  maxParticipants?: number;
  courseSize?: number;
  price?: number;
  city?: string;
  address?: string;
  teachers?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "teacher";
  }>;
  contactPerson?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "teacher";
  };
  registrationLink?: string;
  seo?: SeoMetaFields;
};

export type MasterClass = {
  _id: string;
  _type: "masterClass";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  documentNotReady?: boolean;
  slug?: Slug;
  shortDescription?: string;
  body?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  expectedParticipants?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  registrationAndPaymentInfo?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  organizationalInformation?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  color?: Color;
  courses?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "shortCourse";
  }>;
  minParticipants?: number;
  maxParticipants?: number;
  courseSize?: number;
  price?: number;
  city?: string;
  address?: string;
  contactPerson?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "teacher";
  };
  registrationLink?: string;
  seo?: SeoMetaFields;
};

export type Teacher = {
  _id: string;
  _type: "teacher";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  description?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Table)
  >;
  phone?: string;
  email?: string;
};

export type BlockContent = Array<
  | {
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
      listItem?: "bullet" | "number";
      markDefs?: Array<{
        href?: string;
        _type: "link";
        _key: string;
      }>;
      level?: number;
      _type: "block";
      _key: string;
    }
  | {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
      _key: string;
    }
  | ({
      _key: string;
    } & Table)
>;

export type Table = {
  _type: "table";
  rows?: Array<
    {
      _key: string;
    } & TableRow
  >;
};

export type TableRow = {
  _type: "tableRow";
  cells?: Array<string>;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type MediaTag = {
  _id: string;
  _type: "media.tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: Slug;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type MetaTag = {
  _type: "metaTag";
  metaAttributes?: Array<
    {
      _key: string;
    } & MetaAttribute
  >;
};

export type MetaAttribute = {
  _type: "metaAttribute";
  attributeKey?: string;
  attributeType?: "string" | "image";
  attributeValueImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  attributeValueString?: string;
};

export type SeoMetaFields = {
  _type: "seoMetaFields";
  nofollowAttributes?: boolean;
  metaTitle?: string;
  metaDescription?: string;
  metaImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  seoKeywords?: Array<string>;
  openGraph?: OpenGraph;
  additionalMetaTags?: Array<
    {
      _key: string;
    } & MetaTag
  >;
  twitter?: Twitter;
};

export type Twitter = {
  _type: "twitter";
  cardType?: string;
  creator?: string;
  site?: string;
  handle?: string;
};

export type OpenGraph = {
  _type: "openGraph";
  url?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: string;
  description?: string;
  siteName?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Contact
  | Calendar
  | TextBlock
  | MenuItem
  | Settings
  | GenericPage
  | CourseModule
  | ShortCourseTable
  | ShortCourse
  | MasterClass
  | Teacher
  | BlockContent
  | Table
  | TableRow
  | Color
  | RgbaColor
  | HsvaColor
  | HslaColor
  | MediaTag
  | Slug
  | MetaTag
  | MetaAttribute
  | SeoMetaFields
  | Twitter
  | OpenGraph
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./sanity/lib/queries.ts
// Variable: MasterClassListQuery
// Query: *[_type == "masterClass"] {    _id,    name,    slug,    shortDescription,    color,    minParticipants,    maxParticipants,    courseSize,    documentNotReady}
export type MasterClassListQueryResult = Array<{
  _id: string;
  name: string | null;
  slug: Slug | null;
  shortDescription: string | null;
  color: Color | null;
  minParticipants: number | null;
  maxParticipants: number | null;
  courseSize: number | null;
  documentNotReady: boolean | null;
}>;
// Variable: CourseModuleListQuery
// Query: *[_type == "courseModule"] {  _id,  _type,  name,  slug,  color,  documentNotReady,  notSeparatelyTakeable}
export type CourseModuleListQueryResult = Array<{
  _id: string;
  _type: "courseModule";
  name: string | null;
  slug: Slug | null;
  color: Color | null;
  documentNotReady: boolean | null;
  notSeparatelyTakeable: boolean | null;
}>;
// Variable: ShortCourseListQuery
// Query: *[_type == "shortCourse"]{  _id,  _type,  name,  "courseModule": *[_type == "courseModule" && references(^._id)][0]{    ...  },  slug,  registrationLink,  documentNotReady}
export type ShortCourseListQueryResult = Array<{
  _id: string;
  _type: "shortCourse";
  name: string | null;
  courseModule: {
    _id: string;
    _type: "courseModule";
    _createdAt: string;
    _updatedAt: string;
    _rev: string;
    name?: string;
    documentNotReady?: boolean;
    body?: Array<
      | ({
          _key: string;
        } & Table)
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }
    >;
    notSeparatelyTakeable?: boolean;
    expectedParticipants?: Array<
      | ({
          _key: string;
        } & Table)
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }
    >;
    registrationAndPaymentInfo?: Array<
      | ({
          _key: string;
        } & Table)
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }
    >;
    organizationalInformation?: Array<
      | ({
          _key: string;
        } & Table)
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }
    >;
    slug?: Slug;
    color?: Color;
    minParticipants?: number;
    maxParticipants?: number;
    courseSize?: number;
    price?: number;
    city?: string;
    address?: string;
    courses?: Array<{
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      _key: string;
      [internalGroqTypeReferenceTo]?: "shortCourse";
    }>;
    contactPerson?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "teacher";
    };
    registrationLink?: string;
    seo?: SeoMetaFields;
  } | null;
  slug: Slug | null;
  registrationLink: string | null;
  documentNotReady: boolean | null;
}>;
// Variable: SingleClassModuleCourseQuery
// Query: *[_type in ["masterClass", "courseModule", "shortCourse"] && slug.current == $slug][0]{  ...,  courses[]{    ...,    "slug": @->slug,  },  "teachers": *[_type == "teacher" && _id in *[_type == "shortCourse" && (_id in ^.^.courses[]._ref || _id == ^.^._id)].teachers[]._ref],  contactPerson{    ...,    "name": @->name,    "image": @->image,    "description": @->description,    "email": @->email,    "phone": @->phone  },  seo{        _type,    metaTitle,    nofollowAttributes,    seoKeywords,    metaDescription,    openGraph{        _type,    siteName,    url,    description,    title,    image{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        },    twitter{        _type,    site,    creator,    cardType,    handle        },    additionalMetaTags[]{    _type,    metaAttributes[]{        _type,    attributeValueString,    attributeType,    attributeKey,    attributeValueImage{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        }}    },}
export type SingleClassModuleCourseQueryResult =
  | {
      _id: string;
      _type: "courseModule";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      notSeparatelyTakeable?: boolean;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      slug?: Slug;
      color?: Color;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      courses: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        slug: Slug | null;
      }> | null;
      contactPerson: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        name: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        } | null;
        description: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        > | null;
        email: string | null;
        phone: string | null;
      } | null;
      registrationLink?: string;
      seo: {
        _type: "seoMetaFields";
        metaTitle: string | null;
        nofollowAttributes: boolean | null;
        seoKeywords: Array<string> | null;
        metaDescription: string | null;
        openGraph: {
          _type: "openGraph";
          siteName: string | null;
          url: string | null;
          description: string | null;
          title: string | null;
          image: {
            _type: "image";
            crop: {
              _type: "sanity.imageCrop";
              right: number | null;
              top: number | null;
              left: number | null;
              bottom: number | null;
            } | null;
            hotspot: {
              _type: "sanity.imageHotspot";
              x: number | null;
              y: number | null;
              height: number | null;
              width: number | null;
            } | null;
            asset: {
              _id: string;
              _type: "sanity.imageAsset";
              _createdAt: string;
              _updatedAt: string;
              _rev: string;
              originalFilename?: string;
              label?: string;
              title?: string;
              description?: string;
              altText?: string;
              sha1hash?: string;
              extension?: string;
              mimeType?: string;
              size?: number;
              assetId?: string;
              uploadId?: string;
              path?: string;
              url?: string;
              metadata?: SanityImageMetadata;
              source?: SanityAssetSourceData;
            } | null;
          } | null;
        } | null;
        twitter: {
          _type: "twitter";
          site: string | null;
          creator: string | null;
          cardType: string | null;
          handle: string | null;
        } | null;
        additionalMetaTags: Array<{
          _type: "metaTag";
          metaAttributes: Array<{
            _type: "metaAttribute";
            attributeValueString: string | null;
            attributeType: "image" | "string" | null;
            attributeKey: string | null;
            attributeValueImage: {
              _type: "image";
              crop: {
                _type: "sanity.imageCrop";
                right: number | null;
                top: number | null;
                left: number | null;
                bottom: number | null;
              } | null;
              hotspot: {
                _type: "sanity.imageHotspot";
                x: number | null;
                y: number | null;
                height: number | null;
                width: number | null;
              } | null;
              asset: {
                _id: string;
                _type: "sanity.imageAsset";
                _createdAt: string;
                _updatedAt: string;
                _rev: string;
                originalFilename?: string;
                label?: string;
                title?: string;
                description?: string;
                altText?: string;
                sha1hash?: string;
                extension?: string;
                mimeType?: string;
                size?: number;
                assetId?: string;
                uploadId?: string;
                path?: string;
                url?: string;
                metadata?: SanityImageMetadata;
                source?: SanityAssetSourceData;
              } | null;
            } | null;
          }> | null;
        }> | null;
      } | null;
      teachers: Array<{
        _id: string;
        _type: "teacher";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        name?: string;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        description?: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        >;
        phone?: string;
        email?: string;
      }>;
    }
  | {
      _id: string;
      _type: "masterClass";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      slug?: Slug;
      shortDescription?: string;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      color?: Color;
      courses: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        slug: Slug | null;
      }> | null;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      contactPerson: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        name: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        } | null;
        description: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        > | null;
        email: string | null;
        phone: string | null;
      } | null;
      registrationLink?: string;
      seo: {
        _type: "seoMetaFields";
        metaTitle: string | null;
        nofollowAttributes: boolean | null;
        seoKeywords: Array<string> | null;
        metaDescription: string | null;
        openGraph: {
          _type: "openGraph";
          siteName: string | null;
          url: string | null;
          description: string | null;
          title: string | null;
          image: {
            _type: "image";
            crop: {
              _type: "sanity.imageCrop";
              right: number | null;
              top: number | null;
              left: number | null;
              bottom: number | null;
            } | null;
            hotspot: {
              _type: "sanity.imageHotspot";
              x: number | null;
              y: number | null;
              height: number | null;
              width: number | null;
            } | null;
            asset: {
              _id: string;
              _type: "sanity.imageAsset";
              _createdAt: string;
              _updatedAt: string;
              _rev: string;
              originalFilename?: string;
              label?: string;
              title?: string;
              description?: string;
              altText?: string;
              sha1hash?: string;
              extension?: string;
              mimeType?: string;
              size?: number;
              assetId?: string;
              uploadId?: string;
              path?: string;
              url?: string;
              metadata?: SanityImageMetadata;
              source?: SanityAssetSourceData;
            } | null;
          } | null;
        } | null;
        twitter: {
          _type: "twitter";
          site: string | null;
          creator: string | null;
          cardType: string | null;
          handle: string | null;
        } | null;
        additionalMetaTags: Array<{
          _type: "metaTag";
          metaAttributes: Array<{
            _type: "metaAttribute";
            attributeValueString: string | null;
            attributeType: "image" | "string" | null;
            attributeKey: string | null;
            attributeValueImage: {
              _type: "image";
              crop: {
                _type: "sanity.imageCrop";
                right: number | null;
                top: number | null;
                left: number | null;
                bottom: number | null;
              } | null;
              hotspot: {
                _type: "sanity.imageHotspot";
                x: number | null;
                y: number | null;
                height: number | null;
                width: number | null;
              } | null;
              asset: {
                _id: string;
                _type: "sanity.imageAsset";
                _createdAt: string;
                _updatedAt: string;
                _rev: string;
                originalFilename?: string;
                label?: string;
                title?: string;
                description?: string;
                altText?: string;
                sha1hash?: string;
                extension?: string;
                mimeType?: string;
                size?: number;
                assetId?: string;
                uploadId?: string;
                path?: string;
                url?: string;
                metadata?: SanityImageMetadata;
                source?: SanityAssetSourceData;
              } | null;
            } | null;
          }> | null;
        }> | null;
      } | null;
      teachers: Array<{
        _id: string;
        _type: "teacher";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        name?: string;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        description?: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        >;
        phone?: string;
        email?: string;
      }>;
    }
  | {
      _id: string;
      _type: "shortCourse";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      slug?: Slug;
      minParticipants?: string;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      teachers: Array<{
        _id: string;
        _type: "teacher";
        _createdAt: string;
        _updatedAt: string;
        _rev: string;
        name?: string;
        image?: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        };
        description?: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        >;
        phone?: string;
        email?: string;
      }>;
      contactPerson: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        name: string | null;
        image: {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
        } | null;
        description: Array<
          | ({
              _key: string;
            } & Table)
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs?: Array<{
                href?: string;
                _type: "link";
                _key: string;
              }>;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset?: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              };
              hotspot?: SanityImageHotspot;
              crop?: SanityImageCrop;
              _type: "image";
              _key: string;
            }
        > | null;
        email: string | null;
        phone: string | null;
      } | null;
      registrationLink?: string;
      seo: {
        _type: "seoMetaFields";
        metaTitle: string | null;
        nofollowAttributes: boolean | null;
        seoKeywords: Array<string> | null;
        metaDescription: string | null;
        openGraph: {
          _type: "openGraph";
          siteName: string | null;
          url: string | null;
          description: string | null;
          title: string | null;
          image: {
            _type: "image";
            crop: {
              _type: "sanity.imageCrop";
              right: number | null;
              top: number | null;
              left: number | null;
              bottom: number | null;
            } | null;
            hotspot: {
              _type: "sanity.imageHotspot";
              x: number | null;
              y: number | null;
              height: number | null;
              width: number | null;
            } | null;
            asset: {
              _id: string;
              _type: "sanity.imageAsset";
              _createdAt: string;
              _updatedAt: string;
              _rev: string;
              originalFilename?: string;
              label?: string;
              title?: string;
              description?: string;
              altText?: string;
              sha1hash?: string;
              extension?: string;
              mimeType?: string;
              size?: number;
              assetId?: string;
              uploadId?: string;
              path?: string;
              url?: string;
              metadata?: SanityImageMetadata;
              source?: SanityAssetSourceData;
            } | null;
          } | null;
        } | null;
        twitter: {
          _type: "twitter";
          site: string | null;
          creator: string | null;
          cardType: string | null;
          handle: string | null;
        } | null;
        additionalMetaTags: Array<{
          _type: "metaTag";
          metaAttributes: Array<{
            _type: "metaAttribute";
            attributeValueString: string | null;
            attributeType: "image" | "string" | null;
            attributeKey: string | null;
            attributeValueImage: {
              _type: "image";
              crop: {
                _type: "sanity.imageCrop";
                right: number | null;
                top: number | null;
                left: number | null;
                bottom: number | null;
              } | null;
              hotspot: {
                _type: "sanity.imageHotspot";
                x: number | null;
                y: number | null;
                height: number | null;
                width: number | null;
              } | null;
              asset: {
                _id: string;
                _type: "sanity.imageAsset";
                _createdAt: string;
                _updatedAt: string;
                _rev: string;
                originalFilename?: string;
                label?: string;
                title?: string;
                description?: string;
                altText?: string;
                sha1hash?: string;
                extension?: string;
                mimeType?: string;
                size?: number;
                assetId?: string;
                uploadId?: string;
                path?: string;
                url?: string;
                metadata?: SanityImageMetadata;
                source?: SanityAssetSourceData;
              } | null;
            } | null;
          }> | null;
        }> | null;
      } | null;
      courses: null;
    }
  | null;
// Variable: SingleGenericPageQuery
// Query: *[_type == "genericPage" && slug.current == $slug][0]{  ...,  seo{        _type,    metaTitle,    nofollowAttributes,    seoKeywords,    metaDescription,    openGraph{        _type,    siteName,    url,    description,    title,    image{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        },    twitter{        _type,    site,    creator,    cardType,    handle        },    additionalMetaTags[]{    _type,    metaAttributes[]{        _type,    attributeValueString,    attributeType,    attributeKey,    attributeValueImage{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        }}    }}
export type SingleGenericPageQueryResult = {
  _id: string;
  _type: "genericPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  blocks?: Array<
    | ({
        _key: string;
      } & ShortCourseTable)
    | ({
        _key: string;
      } & TextBlock)
  >;
  seo: {
    _type: "seoMetaFields";
    metaTitle: string | null;
    nofollowAttributes: boolean | null;
    seoKeywords: Array<string> | null;
    metaDescription: string | null;
    openGraph: {
      _type: "openGraph";
      siteName: string | null;
      url: string | null;
      description: string | null;
      title: string | null;
      image: {
        _type: "image";
        crop: {
          _type: "sanity.imageCrop";
          right: number | null;
          top: number | null;
          left: number | null;
          bottom: number | null;
        } | null;
        hotspot: {
          _type: "sanity.imageHotspot";
          x: number | null;
          y: number | null;
          height: number | null;
          width: number | null;
        } | null;
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
      } | null;
    } | null;
    twitter: {
      _type: "twitter";
      site: string | null;
      creator: string | null;
      cardType: string | null;
      handle: string | null;
    } | null;
    additionalMetaTags: Array<{
      _type: "metaTag";
      metaAttributes: Array<{
        _type: "metaAttribute";
        attributeValueString: string | null;
        attributeType: "image" | "string" | null;
        attributeKey: string | null;
        attributeValueImage: {
          _type: "image";
          crop: {
            _type: "sanity.imageCrop";
            right: number | null;
            top: number | null;
            left: number | null;
            bottom: number | null;
          } | null;
          hotspot: {
            _type: "sanity.imageHotspot";
            x: number | null;
            y: number | null;
            height: number | null;
            width: number | null;
          } | null;
          asset: {
            _id: string;
            _type: "sanity.imageAsset";
            _createdAt: string;
            _updatedAt: string;
            _rev: string;
            originalFilename?: string;
            label?: string;
            title?: string;
            description?: string;
            altText?: string;
            sha1hash?: string;
            extension?: string;
            mimeType?: string;
            size?: number;
            assetId?: string;
            uploadId?: string;
            path?: string;
            url?: string;
            metadata?: SanityImageMetadata;
            source?: SanityAssetSourceData;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | null;
} | null;
// Variable: MasterClassPathsQuery
// Query: *[_type in ["masterClass", "courseModule", "shortCourse", "genericPage"] && defined(slug.current) && documentNotReady != true][]{  "params": { "slug": slug.current },  "updatedAt": _updatedAt}
export type MasterClassPathsQueryResult = Array<{
  params: {
    slug: string | null;
  };
  updatedAt: string;
}>;
// Variable: SettingsQuery
// Query: *[_type == "settings"][0]{  ...,  menu[]{    ...,    "slug": @.reference->slug.current  },  seo{        _type,    metaTitle,    nofollowAttributes,    seoKeywords,    metaDescription,    openGraph{        _type,    siteName,    url,    description,    title,    image{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        },    twitter{        _type,    site,    creator,    cardType,    handle        },    additionalMetaTags[]{    _type,    metaAttributes[]{        _type,    attributeValueString,    attributeType,    attributeKey,    attributeValueImage{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        }}    }}
export type SettingsQueryResult = {
  _id: string;
  _type: "settings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  address?: string;
  mainContactEmail?: string;
  mainContactPhone?: string;
  companyCode?: string;
  bankIban?: string;
  registerInterestShortCourse?: string;
  registerInterestCourseModule?: string;
  registerInterestMasterClass?: string;
  menu: Array<{
    _key: string;
    _type: "menuItem";
    name?: string;
    type?: "dropdown" | "reference";
    reference?:
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "courseModule";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "genericPage";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "masterClass";
        }
      | {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "shortCourse";
        };
    dropdownType?: "COURSE_MODULE" | "MASTERCLASS";
    slug: string | null;
  }> | null;
  footerContent?: Array<
    | ({
        _key: string;
      } & Table)
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
  >;
  seo: {
    _type: "seoMetaFields";
    metaTitle: string | null;
    nofollowAttributes: boolean | null;
    seoKeywords: Array<string> | null;
    metaDescription: string | null;
    openGraph: {
      _type: "openGraph";
      siteName: string | null;
      url: string | null;
      description: string | null;
      title: string | null;
      image: {
        _type: "image";
        crop: {
          _type: "sanity.imageCrop";
          right: number | null;
          top: number | null;
          left: number | null;
          bottom: number | null;
        } | null;
        hotspot: {
          _type: "sanity.imageHotspot";
          x: number | null;
          y: number | null;
          height: number | null;
          width: number | null;
        } | null;
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
      } | null;
    } | null;
    twitter: {
      _type: "twitter";
      site: string | null;
      creator: string | null;
      cardType: string | null;
      handle: string | null;
    } | null;
    additionalMetaTags: Array<{
      _type: "metaTag";
      metaAttributes: Array<{
        _type: "metaAttribute";
        attributeValueString: string | null;
        attributeType: "image" | "string" | null;
        attributeKey: string | null;
        attributeValueImage: {
          _type: "image";
          crop: {
            _type: "sanity.imageCrop";
            right: number | null;
            top: number | null;
            left: number | null;
            bottom: number | null;
          } | null;
          hotspot: {
            _type: "sanity.imageHotspot";
            x: number | null;
            y: number | null;
            height: number | null;
            width: number | null;
          } | null;
          asset: {
            _id: string;
            _type: "sanity.imageAsset";
            _createdAt: string;
            _updatedAt: string;
            _rev: string;
            originalFilename?: string;
            label?: string;
            title?: string;
            description?: string;
            altText?: string;
            sha1hash?: string;
            extension?: string;
            mimeType?: string;
            size?: number;
            assetId?: string;
            uploadId?: string;
            path?: string;
            url?: string;
            metadata?: SanityImageMetadata;
            source?: SanityAssetSourceData;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | null;
} | null;
// Variable: ContactQuery
// Query: *[_type == "contact"][0]{  ...,  teachers[]{    ...,    "name": @->name,    "image": @->image,    "description": @->description,    "email": @->email,    "phone": @->phone  },  seo{        _type,    metaTitle,    nofollowAttributes,    seoKeywords,    metaDescription,    openGraph{        _type,    siteName,    url,    description,    title,    image{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        },    twitter{        _type,    site,    creator,    cardType,    handle        },    additionalMetaTags[]{    _type,    metaAttributes[]{        _type,    attributeValueString,    attributeType,    attributeKey,    attributeValueImage{        _type,    crop{    _type,    right,    top,    left,    bottom    },    hotspot{    _type,    x,    y,    height,    width,    },    asset->{...}        }        }}    }}
export type ContactQueryResult = {
  _id: string;
  _type: "contact";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  locationCardTitle?: string;
  contactCardTitle?: string;
  teachers: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    name: string | null;
    image: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      _type: "image";
    } | null;
    description: Array<
      | ({
          _key: string;
        } & Table)
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs?: Array<{
            href?: string;
            _type: "link";
            _key: string;
          }>;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset?: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          };
          hotspot?: SanityImageHotspot;
          crop?: SanityImageCrop;
          _type: "image";
          _key: string;
        }
    > | null;
    email: string | null;
    phone: string | null;
  }> | null;
  seo: {
    _type: "seoMetaFields";
    metaTitle: string | null;
    nofollowAttributes: boolean | null;
    seoKeywords: Array<string> | null;
    metaDescription: string | null;
    openGraph: {
      _type: "openGraph";
      siteName: string | null;
      url: string | null;
      description: string | null;
      title: string | null;
      image: {
        _type: "image";
        crop: {
          _type: "sanity.imageCrop";
          right: number | null;
          top: number | null;
          left: number | null;
          bottom: number | null;
        } | null;
        hotspot: {
          _type: "sanity.imageHotspot";
          x: number | null;
          y: number | null;
          height: number | null;
          width: number | null;
        } | null;
        asset: {
          _id: string;
          _type: "sanity.imageAsset";
          _createdAt: string;
          _updatedAt: string;
          _rev: string;
          originalFilename?: string;
          label?: string;
          title?: string;
          description?: string;
          altText?: string;
          sha1hash?: string;
          extension?: string;
          mimeType?: string;
          size?: number;
          assetId?: string;
          uploadId?: string;
          path?: string;
          url?: string;
          metadata?: SanityImageMetadata;
          source?: SanityAssetSourceData;
        } | null;
      } | null;
    } | null;
    twitter: {
      _type: "twitter";
      site: string | null;
      creator: string | null;
      cardType: string | null;
      handle: string | null;
    } | null;
    additionalMetaTags: Array<{
      _type: "metaTag";
      metaAttributes: Array<{
        _type: "metaAttribute";
        attributeValueString: string | null;
        attributeType: "image" | "string" | null;
        attributeKey: string | null;
        attributeValueImage: {
          _type: "image";
          crop: {
            _type: "sanity.imageCrop";
            right: number | null;
            top: number | null;
            left: number | null;
            bottom: number | null;
          } | null;
          hotspot: {
            _type: "sanity.imageHotspot";
            x: number | null;
            y: number | null;
            height: number | null;
            width: number | null;
          } | null;
          asset: {
            _id: string;
            _type: "sanity.imageAsset";
            _createdAt: string;
            _updatedAt: string;
            _rev: string;
            originalFilename?: string;
            label?: string;
            title?: string;
            description?: string;
            altText?: string;
            sha1hash?: string;
            extension?: string;
            mimeType?: string;
            size?: number;
            assetId?: string;
            uploadId?: string;
            path?: string;
            url?: string;
            metadata?: SanityImageMetadata;
            source?: SanityAssetSourceData;
          } | null;
        } | null;
      }> | null;
    }> | null;
  } | null;
} | null;
// Variable: TeachersQuery
// Query: *[_type == "teacher"]
export type TeachersQueryResult = Array<{
  _id: string;
  _type: "teacher";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  description?: Array<
    | ({
        _key: string;
      } & Table)
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
        listItem?: "bullet" | "number";
        markDefs?: Array<{
          href?: string;
          _type: "link";
          _key: string;
        }>;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        _type: "image";
        _key: string;
      }
  >;
  phone?: string;
  email?: string;
}>;
// Variable: CalendarQuery
// Query: *[_type == "calendar"]{  ...,  "course": {    "_id": @.classes->_id,     "_type": @.classes->_type,    "slug": @.classes->slug.current,    "name": @.classes->name,    "courseModule": *[_type == "courseModule" && references(^.classes->_id)][0],    "masterClass": *[_type == "masterClass" && references(^.classes->_id)][0],    "color": @.classes->color,    "maxParticipants": @.classes->maxParticipants,    "minParticipants": @.classes->minParticipants,    "courseSize": @.classes->courseSize  },  parentMasterClasses[]{    ...,    "_id": @->_id,    "_type": @->_type,    "startDate": @->startDate,    "endDate": @->endDate,    "course": {      "_id": @->classes->_id,      "_type": @->classes->_type,      "slug": @->classes->slug.current,      "name": @->classes->name,    }  },  parentCourseModules[]{    ...,    "_id": @->_id,    "_type": @->_type,    "startDate": @->startDate,    "endDate": @->endDate,    "course": {      "_id": @->classes->_id,      "_type": @->classes->_type,      "slug": @->classes->slug.current,      "name": @->classes->name,    }  }}
export type CalendarQueryResult = Array<{
  _id: string;
  _type: "calendar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  classes?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "courseModule";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "masterClass";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      };
  parentMasterClass?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentCourseModule?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentMasterClasses: Array<{
    _ref: string;
    _type: "calendar";
    _weak?: boolean;
    _key: string;
    _id: string;
    startDate: string | null;
    endDate: string | null;
    course: {
      _id: string | null;
      _type: "courseModule" | "masterClass" | "shortCourse" | null;
      slug: string | null;
      name: string | null;
    };
  }> | null;
  parentCourseModules: Array<{
    _ref: string;
    _type: "calendar";
    _weak?: boolean;
    _key: string;
    _id: string;
    startDate: string | null;
    endDate: string | null;
    course: {
      _id: string | null;
      _type: "courseModule" | "masterClass" | "shortCourse" | null;
      slug: string | null;
      name: string | null;
    };
  }> | null;
  active?: boolean;
  startDate?: string;
  endDate?: string;
  summaryEventDate?: string;
  course: {
    _id: string | null;
    _type: "courseModule" | "masterClass" | "shortCourse" | null;
    slug: string | null;
    name: string | null;
    courseModule: {
      _id: string;
      _type: "courseModule";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      notSeparatelyTakeable?: boolean;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      slug?: Slug;
      color?: Color;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      courses?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }>;
      contactPerson?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teacher";
      };
      registrationLink?: string;
      seo?: SeoMetaFields;
    } | null;
    masterClass: {
      _id: string;
      _type: "masterClass";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      slug?: Slug;
      shortDescription?: string;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      color?: Color;
      courses?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }>;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      contactPerson?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teacher";
      };
      registrationLink?: string;
      seo?: SeoMetaFields;
    } | null;
    color: Color | null;
    maxParticipants: number | null;
    minParticipants: number | null | string;
    courseSize: number | null;
  };
}>;
// Variable: CalendarEventByCourseQuery
// Query: *[_type == "calendar" && classes->slug.current == $slug][]{  ...,  "course": {    "_id": @.classes->_id,     "_type": @.classes->_type,    "slug": @.classes->slug.current,    "name": @.classes->name,    "courseModule": *[_type == "courseModule" && references(^.classes->_id)][0],    "masterClass": *[_type == "masterClass" && references(^.classes->_id)][0],    "color": @.classes->color,    "maxParticipants": @.classes->maxParticipants,    "minParticipants": @.classes->minParticipants  },  parentMasterClasses[]{    ...,    "_id": @->_id,    "_type": @->_type,    "startDate": @->startDate,    "endDate": @->endDate,    "course": {      "_id": @->classes->_id,      "_type": @->classes->_type,      "slug": @->classes->slug.current,      "name": @->classes->name,    }  },  parentCourseModules[]{    ...,    "_id": @->_id,    "_type": @->_type,    "startDate": @->startDate,    "endDate": @->endDate,    "course": {      "_id": @->classes->_id,      "_type": @->classes->_type,      "slug": @->classes->slug.current,      "name": @->classes->name,    }  }}
export type CalendarEventByCourseQueryResult = Array<{
  _id: string;
  _type: "calendar";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  classes?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "courseModule";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "masterClass";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      };
  parentMasterClass?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentCourseModule?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "calendar";
  };
  parentMasterClasses: Array<{
    _ref: string;
    _type: "calendar";
    _weak?: boolean;
    _key: string;
    _id: string;
    startDate: string | null;
    endDate: string | null;
    course: {
      _id: string | null;
      _type: "courseModule" | "masterClass" | "shortCourse" | null;
      slug: string | null;
      name: string | null;
    };
  }> | null;
  parentCourseModules: Array<{
    _ref: string;
    _type: "calendar";
    _weak?: boolean;
    _key: string;
    _id: string;
    startDate: string | null;
    endDate: string | null;
    course: {
      _id: string | null;
      _type: "courseModule" | "masterClass" | "shortCourse" | null;
      slug: string | null;
      name: string | null;
    };
  }> | null;
  active?: boolean;
  startDate?: string;
  endDate?: string;
  summaryEventDate?: string;
  course: {
    _id: string | null;
    _type: "courseModule" | "masterClass" | "shortCourse" | null;
    slug: string | null;
    name: string | null;
    courseModule: {
      _id: string;
      _type: "courseModule";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      notSeparatelyTakeable?: boolean;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      slug?: Slug;
      color?: Color;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      courses?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }>;
      contactPerson?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teacher";
      };
      registrationLink?: string;
      seo?: SeoMetaFields;
    } | null;
    masterClass: {
      _id: string;
      _type: "masterClass";
      _createdAt: string;
      _updatedAt: string;
      _rev: string;
      name?: string;
      documentNotReady?: boolean;
      slug?: Slug;
      shortDescription?: string;
      body?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      expectedParticipants?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      registrationAndPaymentInfo?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      organizationalInformation?: Array<
        | ({
            _key: string;
          } & Table)
        | {
            children?: Array<{
              marks?: Array<string>;
              text?: string;
              _type: "span";
              _key: string;
            }>;
            style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
            listItem?: "bullet" | "number";
            markDefs?: Array<{
              href?: string;
              _type: "link";
              _key: string;
            }>;
            level?: number;
            _type: "block";
            _key: string;
          }
        | {
            asset?: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            };
            hotspot?: SanityImageHotspot;
            crop?: SanityImageCrop;
            _type: "image";
            _key: string;
          }
      >;
      color?: Color;
      courses?: Array<{
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        _key: string;
        [internalGroqTypeReferenceTo]?: "shortCourse";
      }>;
      minParticipants?: number;
      maxParticipants?: number;
      courseSize?: number;
      price?: number;
      city?: string;
      address?: string;
      contactPerson?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "teacher";
      };
      registrationLink?: string;
      seo?: SeoMetaFields;
    } | null;
    color: Color | null;
    maxParticipants: number | null;
    minParticipants: number | null | string;
  };
}>;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "masterClass"] {\n    _id,\n    name,\n    slug,\n    shortDescription,\n    color,\n    minParticipants,\n    maxParticipants,\n    courseSize,\n    documentNotReady\n}': MasterClassListQueryResult;
    '*[_type == "courseModule"] {\n  _id,\n  _type,\n  name,\n  slug,\n  color,\n  documentNotReady,\n  notSeparatelyTakeable\n}': CourseModuleListQueryResult;
    '*[_type == "shortCourse"]{\n  _id,\n  _type,\n  name,\n  "courseModule": *[_type == "courseModule" && references(^._id)][0]{\n    ...\n  },\n  slug,\n  registrationLink,\n  documentNotReady\n}': ShortCourseListQueryResult;
    '*[_type in ["masterClass", "courseModule", "shortCourse"] && slug.current == $slug][0]{\n  ...,\n  courses[]{\n    ...,\n    "slug": @->slug,\n  },\n  "teachers": *[_type == "teacher" && _id in *[_type == "shortCourse" && (_id in ^.^.courses[]._ref || _id == ^.^._id)].teachers[]._ref],\n  contactPerson{\n    ...,\n    "name": @->name,\n    "image": @->image,\n    "description": @->description,\n    "email": @->email,\n    "phone": @->phone\n  },\n  seo{\n    \n    _type,\n    metaTitle,\n    nofollowAttributes,\n    seoKeywords,\n    metaDescription,\n    openGraph{\n    \n    _type,\n    siteName,\n    url,\n    description,\n    title,\n    image{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    },\n    twitter{\n    \n    _type,\n    site,\n    creator,\n    cardType,\n    handle\n    \n    },\n    additionalMetaTags[]{\n    _type,\n    metaAttributes[]{\n    \n    _type,\n    attributeValueString,\n    attributeType,\n    attributeKey,\n    attributeValueImage{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    }\n}\n    \n},\n}': SingleClassModuleCourseQueryResult;
    '*[_type == "genericPage" && slug.current == $slug][0]{\n  ...,\n  seo{\n    \n    _type,\n    metaTitle,\n    nofollowAttributes,\n    seoKeywords,\n    metaDescription,\n    openGraph{\n    \n    _type,\n    siteName,\n    url,\n    description,\n    title,\n    image{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    },\n    twitter{\n    \n    _type,\n    site,\n    creator,\n    cardType,\n    handle\n    \n    },\n    additionalMetaTags[]{\n    _type,\n    metaAttributes[]{\n    \n    _type,\n    attributeValueString,\n    attributeType,\n    attributeKey,\n    attributeValueImage{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    }\n}\n    \n}\n}': SingleGenericPageQueryResult;
    '*[_type in ["masterClass", "courseModule", "shortCourse", "genericPage"] && defined(slug.current) && documentNotReady != true][]{\n  "params": { "slug": slug.current },\n  "updatedAt": _updatedAt\n}': MasterClassPathsQueryResult;
    '*[_type == "settings"][0]\n{\n  ...,\n  menu[]{\n    ...,\n    "slug": @.reference->slug.current\n  },\n  seo{\n    \n    _type,\n    metaTitle,\n    nofollowAttributes,\n    seoKeywords,\n    metaDescription,\n    openGraph{\n    \n    _type,\n    siteName,\n    url,\n    description,\n    title,\n    image{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    },\n    twitter{\n    \n    _type,\n    site,\n    creator,\n    cardType,\n    handle\n    \n    },\n    additionalMetaTags[]{\n    _type,\n    metaAttributes[]{\n    \n    _type,\n    attributeValueString,\n    attributeType,\n    attributeKey,\n    attributeValueImage{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    }\n}\n    \n}\n}': SettingsQueryResult;
    '*[_type == "contact"][0]{\n  ...,\n  teachers[]{\n    ...,\n    "name": @->name,\n    "image": @->image,\n    "description": @->description,\n    "email": @->email,\n    "phone": @->phone\n  },\n  seo{\n    \n    _type,\n    metaTitle,\n    nofollowAttributes,\n    seoKeywords,\n    metaDescription,\n    openGraph{\n    \n    _type,\n    siteName,\n    url,\n    description,\n    title,\n    image{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    },\n    twitter{\n    \n    _type,\n    site,\n    creator,\n    cardType,\n    handle\n    \n    },\n    additionalMetaTags[]{\n    _type,\n    metaAttributes[]{\n    \n    _type,\n    attributeValueString,\n    attributeType,\n    attributeKey,\n    attributeValueImage{\n    \n    _type,\n    crop{\n    _type,\n    right,\n    top,\n    left,\n    bottom\n    },\n    hotspot{\n    _type,\n    x,\n    y,\n    height,\n    width,\n    },\n    asset->{...}\n    \n    }\n    \n    }\n}\n    \n}\n}': ContactQueryResult;
    '*[_type == "teacher"]': TeachersQueryResult;
    '*[_type == "calendar"]{\n  ...,\n  "course": {\n    "_id": @.classes->_id, \n    "_type": @.classes->_type,\n    "slug": @.classes->slug.current,\n    "name": @.classes->name,\n    "courseModule": *[_type == "courseModule" && references(^.classes->_id)][0],\n    "masterClass": *[_type == "masterClass" && references(^.classes->_id)][0],\n    "color": @.classes->color,\n    "maxParticipants": @.classes->maxParticipants,\n    "minParticipants": @.classes->minParticipants,\n    "courseSize": @.classes->courseSize\n  },\n  parentMasterClasses[]{\n    ...,\n    "_id": @->_id,\n    "_type": @->_type,\n    "startDate": @->startDate,\n    "endDate": @->endDate,\n    "course": {\n      "_id": @->classes->_id,\n      "_type": @->classes->_type,\n      "slug": @->classes->slug.current,\n      "name": @->classes->name,\n    }\n  },\n  parentCourseModules[]{\n    ...,\n    "_id": @->_id,\n    "_type": @->_type,\n    "startDate": @->startDate,\n    "endDate": @->endDate,\n    "course": {\n      "_id": @->classes->_id,\n      "_type": @->classes->_type,\n      "slug": @->classes->slug.current,\n      "name": @->classes->name,\n    }\n  }\n}': CalendarQueryResult;
    '*[_type == "calendar" && classes->slug.current == $slug][]{\n  ...,\n  "course": {\n    "_id": @.classes->_id, \n    "_type": @.classes->_type,\n    "slug": @.classes->slug.current,\n    "name": @.classes->name,\n    "courseModule": *[_type == "courseModule" && references(^.classes->_id)][0],\n    "masterClass": *[_type == "masterClass" && references(^.classes->_id)][0],\n    "color": @.classes->color,\n    "maxParticipants": @.classes->maxParticipants,\n    "minParticipants": @.classes->minParticipants\n  },\n  parentMasterClasses[]{\n    ...,\n    "_id": @->_id,\n    "_type": @->_type,\n    "startDate": @->startDate,\n    "endDate": @->endDate,\n    "course": {\n      "_id": @->classes->_id,\n      "_type": @->classes->_type,\n      "slug": @->classes->slug.current,\n      "name": @->classes->name,\n    }\n  },\n  parentCourseModules[]{\n    ...,\n    "_id": @->_id,\n    "_type": @->_type,\n    "startDate": @->startDate,\n    "endDate": @->endDate,\n    "course": {\n      "_id": @->classes->_id,\n      "_type": @->classes->_type,\n      "slug": @->classes->slug.current,\n      "name": @->classes->name,\n    }\n  }\n}': CalendarEventByCourseQueryResult;
  }
}
